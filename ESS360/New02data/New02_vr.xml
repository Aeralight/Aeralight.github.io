<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19"
        onstart="startup"
        logkey="false"
        bgcolor="#ffffff"
        projectfloorplanurl=""
        projecttitleid="project_title"
        projectdescriptionid="">


  <security cors="">
    <!--
    <crossdomainxml url="http://RESSOURCES_URL/crossdomain.xml" />
    -->
    <allowdomain domain="*" />
  </security>

  <krpano tour_firststartactiondone="false" />
  <events name="startbehavioursevents" onxmlcomplete="startbehavioursxmlcompleteaction();" keep="true"/>

  <!-- generated by Panotour Pro V2.5.7 64bits : 02-05-2017 03-36-05 -->
  <!-- Plugins and Spot Styles -->
  <include url="%FIRSTXML%/New02_skin_vr.xml"/>
  <!-- Core actions -->
  <include url="%FIRSTXML%/New02_core_vr.xml"/>
  <!-- Tour Messages -->
  <include url="%FIRSTXML%/New02_messages_en.xml"/>

  <action name="startup">
    preloadSounds();

    if (s !== null, if (startscene === null, set(startscene, get(s));); );
    if (startscene === null,
      set(startscene, pano22);
    );
    mainloadsceneStartup(get(startscene));
    if (h !== null,
      if (v !== null,
        if (f !== null,
          lookat(get(h), get(v), get(f));
         ,
          lookat(get(h), get(v));
        );
      ,
        if (f !== null,
          lookat(get(h), get(view.vlookat), get(f));
         ,
          lookat(get(h), get(view.vlookat));
        );
      );
    ,
      if (v !== null,
        if (f !== null,
          lookat(get(view.hlookat), get(v), get(f));
         ,
          lookat(get(view.hlookat), get(v));
        );
      ,
        if (f !== null,
          lookat(get(view.hlookat), get(view.vlookat), get(f));
        );
      );
    );
  </action>

  <!-- 9 Groups -->

  <!-- Group Group 11 : 1 panoramas -->
  

<!-- **** @PanoName="ESSAll01x" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/ESSAll01x.jpg" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<!-- Partial panorama or video is not compatible with VR Headset -->

  <!-- Group Group 13 : 1 panoramas -->
  

<!-- **** @PanoName="ESSAll02x" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/ESSAll02x.jpg" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<!-- Partial panorama or video is not compatible with VR Headset -->

  <!-- Group Group 17 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4k1aSt" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Film1x4k/Tunnel4k1aSt.jpg" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<!-- Partial panorama or video is not compatible with VR Headset -->

  <!-- Group Group 21 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4kx2aST" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Film2ax4k/Tunnel4kx2aST.jpg" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<!-- Partial panorama or video is not compatible with VR Headset -->

  <!-- Group Group 23 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4kx1" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Handbrakeconvertedfilms/Film4kx1/Tunnel4kx1.mp4" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<scene name="pano22"
       heading="0"
       thumburl="%FIRSTXML%/tunnel4kx1_22/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano22_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano22OnStart();"
       scenevideourl="%FIRSTXML%/tunnel4kx1_22/tunnel4kx1.mp4"
       scenevideolowresurl="%FIRSTXML%/tunnel4kx1_22/tunnel2kx1.mp4"
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/tunnel4kx1_22/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/tunnel4kx1_22/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="0.000000" tofov="90.000000" waittime="1" speed="5"/>


    <panoview h="0.000000" v="0.000000" fov="90.000000" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="90" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="1"
          fovtype="VFOV"
          fovmax="90"
          fov="90.000000"
          hlookat="0.000000"
          vlookat="0.000000"/>

    <preview url="%FIRSTXML%/tunnel4kx1_22/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>


<action name="pano22OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'New02data/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'New02data/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano22OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
						if(videointerface_autostart !== true,
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano22OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano22OnStart(););
	);
</action>





  <!-- **** 1 Point Spots **** -->




  <action name="hidepanopointspots">
    set(hotspot[spotpoint87].visible, false);
  </action>
  <action name="showpanopointspots">
    set(hotspot[spotpoint87].visible, true);
  </action>
  <events name="pano22stopanimatedspots" onremovepano="" />


  <action name="showpanospotsaction">
    resumeTourSoundsActions(true,false,false,false,true);
    if (tour_displayspots,
    showpanopointspots();




    );
  </action>
  <action name="hidepanospotsaction">
    pauseTourSoundsActions(true,false,false,false,true);
    hidepanopointspots();




  </action>

  <action name="setzorder2onstandardspots">
    if (device.html5,
      ifnot (device.desktop,


        set(hotspot[spotpoint87].zorder2, %1);

      );
    );
  </action>


</scene>


  <!-- Group Group 25 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4kx2a" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Handbrakeconvertedfilms/Film4kx2a/Tunnel4kx2a.mp4" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<scene name="pano24"
       heading="0"
       thumburl="%FIRSTXML%/tunnel4kx2a_24/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano24_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano24OnStart();"
       scenevideourl="%FIRSTXML%/tunnel4kx2a_24/tunnel4kx2a.mp4"
       scenevideolowresurl="%FIRSTXML%/tunnel4kx2a_24/tunnel2kx2a.m4v"
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/tunnel4kx2a_24/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/tunnel4kx2a_24/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="0.000000" tofov="90.000000" waittime="1" speed="5"/>


    <panoview h="0.000000" v="0.000000" fov="90.000000" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="90" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="1"
          fovtype="VFOV"
          fovmax="90"
          fov="90.000000"
          hlookat="0.000000"
          vlookat="0.000000"/>

    <preview url="%FIRSTXML%/tunnel4kx2a_24/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>


<action name="pano24OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'New02data/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'New02data/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano24OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
						if(videointerface_autostart !== true,
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano24OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano24OnStart(););
	);
</action>





  <!-- **** 1 Point Spots **** -->




  <action name="hidepanopointspots">
    set(hotspot[spotpoint89].visible, false);
  </action>
  <action name="showpanopointspots">
    set(hotspot[spotpoint89].visible, true);
  </action>
  <events name="pano24stopanimatedspots" onremovepano="" />


  <action name="showpanospotsaction">
    resumeTourSoundsActions(true,false,false,false,true);
    if (tour_displayspots,
    showpanopointspots();




    );
  </action>
  <action name="hidepanospotsaction">
    pauseTourSoundsActions(true,false,false,false,true);
    hidepanopointspots();




  </action>

  <action name="setzorder2onstandardspots">
    if (device.html5,
      ifnot (device.desktop,


        set(hotspot[spotpoint89].zorder2, %1);

      );
    );
  </action>


</scene>


  <!-- Group Group 34 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4kx2b" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Handbrakeconvertedfilms/Film4kx2b/Tunnel4kx2b.m4v" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<scene name="pano33"
       heading="0"
       thumburl="%FIRSTXML%/tunnel4kx2b_33/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano33_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano33OnStart();"
       scenevideourl="%FIRSTXML%/tunnel4kx2b_33/tunnel4kx2b.m4v"
       scenevideolowresurl=""
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/tunnel4kx2b_33/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/tunnel4kx2b_33/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="0.000000" tofov="90.000000" waittime="1" speed="5"/>


    <panoview h="0.000000" v="0.000000" fov="90.000000" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="90" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="1"
          fovtype="VFOV"
          fovmax="90"
          fov="90.000000"
          hlookat="0.000000"
          vlookat="0.000000"/>

    <preview url="%FIRSTXML%/tunnel4kx2b_33/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>


<action name="pano33OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'New02data/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'New02data/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano33OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
						if(videointerface_autostart !== true,
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano33OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano33OnStart(););
	);
</action>





  <action name="setzorder2onstandardspots">
    if (device.html5,
      ifnot (device.desktop,


      );
    );
  </action>


</scene>


  <!-- Group Group 36 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4kx2b" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Handbrakeconvertedfilms/Film4kx2b/Tunnel4kx2b.m4v" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<scene name="pano35"
       heading="0"
       thumburl="%FIRSTXML%/tunnel4kx2b_35/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano35_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano35OnStart();"
       scenevideourl="%FIRSTXML%/tunnel4kx2b_35/tunnel4kx2b.m4v"
       scenevideolowresurl="%FIRSTXML%/tunnel4kx2b_35/tunnel2kx2b.m4v"
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/tunnel4kx2b_35/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/tunnel4kx2b_35/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="0.000000" tofov="90.000000" waittime="1" speed="5"/>


    <panoview h="0.000000" v="0.000000" fov="90.000000" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="90" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="1"
          fovtype="VFOV"
          fovmax="90"
          fov="90.000000"
          hlookat="0.000000"
          vlookat="0.000000"/>

    <preview url="%FIRSTXML%/tunnel4kx2b_35/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>


<action name="pano35OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'New02data/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'New02data/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano35OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
						if(videointerface_autostart !== true,
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano35OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano35OnStart(););
	);
</action>





  <!-- **** 1 Point Spots **** -->




  <action name="hidepanopointspots">
    set(hotspot[spotpoint90].visible, false);
  </action>
  <action name="showpanopointspots">
    set(hotspot[spotpoint90].visible, true);
  </action>
  <events name="pano35stopanimatedspots" onremovepano="" />


  <action name="showpanospotsaction">
    resumeTourSoundsActions(true,false,false,false,true);
    if (tour_displayspots,
    showpanopointspots();




    );
  </action>
  <action name="hidepanospotsaction">
    pauseTourSoundsActions(true,false,false,false,true);
    hidepanopointspots();




  </action>

  <action name="setzorder2onstandardspots">
    if (device.html5,
      ifnot (device.desktop,


        set(hotspot[spotpoint90].zorder2, %1);

      );
    );
  </action>


</scene>


  <!-- Group Group 40 : 1 panoramas -->
  

<!-- **** @PanoName="Tunnel4kx2c" @PanoFile="D:/PanoPRO/ESSBILDER2017/ESSNewBuildForPanotour360/Handbrakeconvertedfilms/Film4kx2c/Tunnel4kx2c.m4v" **** -->
<!-- **** Width="3840px" Height="2160px" **** -->
<scene name="pano39"
       heading="0"
       thumburl="%FIRSTXML%/tunnel4kx2c_39/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano39_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano39OnStart();"
       scenevideourl="%FIRSTXML%/tunnel4kx2c_39/tunnel4kx2c.m4v"
       scenevideolowresurl="%FIRSTXML%/tunnel4kx2c_39/tunnel2kx2c.m4v"
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/tunnel4kx2c_39/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/tunnel4kx2c_39/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="0.000000" tofov="90.000000" waittime="1" speed="5"/>


    <panoview h="0.000000" v="0.000000" fov="90.000000" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="90" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="1"
          fovtype="VFOV"
          fovmax="90"
          fov="90.000000"
          hlookat="0.000000"
          vlookat="0.000000"/>

    <preview url="%FIRSTXML%/tunnel4kx2c_39/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>


<action name="pano39OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'New02data/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'New02data/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano39OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene AND scene[get(xml.scene)].hasiphonesound),
						if(videointerface_autostart !== true,
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano39OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano39OnStart(););
	);
</action>





  <!-- **** 1 Point Spots **** -->




  <action name="hidepanopointspots">
    set(hotspot[spotpoint91].visible, false);
  </action>
  <action name="showpanopointspots">
    set(hotspot[spotpoint91].visible, true);
  </action>
  <events name="pano39stopanimatedspots" onremovepano="" />


  <action name="showpanospotsaction">
    resumeTourSoundsActions(true,false,false,false,true);
    if (tour_displayspots,
    showpanopointspots();




    );
  </action>
  <action name="hidepanospotsaction">
    pauseTourSoundsActions(true,false,false,false,true);
    hidepanopointspots();




  </action>

  <action name="setzorder2onstandardspots">
    if (device.html5,
      ifnot (device.desktop,


        set(hotspot[spotpoint91].zorder2, %1);

      );
    );
  </action>


</scene>


  <krpano nofullspherepanoavailable="false" />



</krpano>

